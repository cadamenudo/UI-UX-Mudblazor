@page "/"
@inject IJSRuntime JS
@using MudBlazor

<MudThemeProvider />
<MudDialogProvider />

<MudContainer MaxWidth="MaxWidth.Large" Class="pa-4">
    <MudText Typo="Typo.h5" GutterBottom>Hola Xavier</MudText>

    <!-- üîπ Resumen de Ingresos / Gastos / Ahorro -->
    <MudPaper Class="pa-4 my-2" Style="border-radius: 16px;">
        <MudGrid>
            @foreach (var item in Resumen)
            {
                <MudItem xs="4">
                    <MudStack Direction="Row" AlignItems="Center" Spacing="2">
                        <MudAvatar Image="@item.Icon" Size="Size.Medium" />
                        <MudStack>
                            <MudText Typo="Typo.caption">@item.Nombre</MudText>
                            <MudText Typo="Typo.subtitle2" Bold="true">@item.Valor</MudText>
                        </MudStack>
                    </MudStack>
                </MudItem>
            }
        </MudGrid>
    </MudPaper>

    <!-- üîπ Super√°vit -->
    <MudAlert Severity="Severity.Success" Dense="true" Class="my-2">
        ‚úÖ SUPER: Tienes un sobrante de <strong>$@Superavit</strong>
    </MudAlert>

    <!-- üîπ Selector de Fechas -->
    <MudGrid Class="my-3">
        <MudItem xs="6">
            <MudDatePicker Label="Desde" @bind-Date="FechaDesde" />
        </MudItem>
        <MudItem xs="6">
            <MudDatePicker Label="Hasta" @bind-Date="FechaHasta" />
        </MudItem>
    </MudGrid>

    <!-- üîπ Gr√°ficos -->
    <MudPaper Class="pa-4 my-4" Style="border-radius:16px;">
        <MudText Typo="Typo.h6" Align="Align.Center">Meta para el a√±o</MudText>
        <canvas id="graficoMetas" height="250"></canvas>
    </MudPaper>

    <MudPaper Class="pa-4 my-4" Style="border-radius:16px;">
        <MudText Typo="Typo.h6" Align="Align.Center">Ingresos vs Gastos</MudText>
        <canvas id="graficoLineal" height="250"></canvas>
    </MudPaper>

    <MudPaper Class="pa-4 my-4" Style="border-radius:16px;">
        <MudText Typo="Typo.h6" Align="Align.Center">Ingresos Totales</MudText>
        <canvas id="graficoDonaIngresos" height="250"></canvas>
    </MudPaper>

    <MudPaper Class="pa-4 my-4" Style="border-radius:16px;">
        <MudText Typo="Typo.h6" Align="Align.Center">Gastos Totales</MudText>
        <canvas id="graficoDonaGastos" height="250"></canvas>
    </MudPaper>

    <MudPaper Class="pa-4 my-4" Style="border-radius:16px;">
        <MudText Typo="Typo.h6" Align="Align.Center">Subcategor√≠as</MudText>
        <canvas id="graficoSubcategoria" height="250"></canvas>
    </MudPaper>
</MudContainer>

<footer class="navbar">
    <div class="nav-item">
        <img src="assets/icons/home.png" alt="Inicio" />
        <span>Tablero</span>
    </div>
    <div class="nav-item">
        <img src="assets/icons/transacciones.png" alt="Transacciones" />
        <span>Transacciones</span>
    </div>
    <div class="nav-item nav-item-nuevo">
        <div class="boton-registrar">
            <img src="assets/icons/nueva.png" alt="Registrar" />
        </div>
        <span>Registrar</span>
    </div>
    <div class="nav-item">
        <img src="assets/icons/metas.png" alt="Metas" />
        <span>Metas</span>
    </div>
    <div class="nav-item">
        <img src="assets/icons/buscar.png" alt="Buscar" />
        <span>Buscar</span>
    </div>
</footer>

<div class="footer-legales">
    <button @onclick="() => AbrirModal("T√©rminos", "terminos.html")">T√©rminos</button>
    <button @onclick="() => AbrirModal("Pol√≠tica de Privacidad", "privacidad.html")">Pol√≠tica de Privacidad</button>
    <a href="mailto:tech@cadamenudo.com">tech@cadamenudo.com</a>
</div>

@code {
    private DateTime FechaDesde = new(2025, 1, 1);
    private DateTime FechaHasta = new(2025, 5, 31);
    private string Superavit = "1,868.77";

    private List<(string Nombre, string Valor, string Icon)> Resumen = new()
    {
        ("Ingresos", "$6,000.00", "assets/icons/ingreso.png"),
        ("Gastos", "$3,531.23", "assets/icons/gastos.png"),
        ("Ahorros", "$600.00", "assets/icons/ahorro.png")
    };

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("initCharts");
        }
    }

    [Inject] IDialogService DialogService { get; set; }

    private async Task AbrirModal(string titulo, string url)
    {
        var parameters = new DialogParameters { ["Url"] = url };
        await DialogService.Show<ModalT√©rminos>(titulo, parameters).Result;
    }
}
