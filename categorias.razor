<style>

      body {
    font-family: 'Greycliff CF', sans-serif;
    background: #F9FAFB;
  }
    .titulo-exp {
        font-family: 'Greycliff CF', sans-serif;
        font-size: 1.25rem;
        font-weight: 700;
        color: #0f172a;
    }

    .categoria-panel {
        background: #ffffff;
        border-radius: 20px;
        box-shadow: 0 1px 5px rgba(0, 0, 0, 0.05);
        margin: 0 auto 1.5rem;
        max-width: 700px;
    }

    .categoria-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        font-weight: 700;
        font-size: 1.05rem;
        padding: 1rem 1rem 0.5rem;
        cursor: pointer;
    }

.subcategoria-item {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0.25rem 1rem 0.25rem 2rem;
    margin-bottom: 0.5rem;
}


    .subcategoria-item .nombre {
        flex-grow: 1;
        font-size: 1rem;
        color: #0f172a;
    }

    .subcategoria-item .recurrencia {
        margin-left: 0.25rem;
    }

    .subcategoria-item .switch {
        margin-left: auto;
    }

    .btn-nueva {
        margin: 0.5rem 1.5rem 1rem auto;
        border-radius: 12px;
        min-width: 90px;
        font-size: 0.75rem;
        font-weight: 500;
        background-color: #594AE2;
        color: white;
        text-transform: uppercase;
        padding: 0.3rem 1rem;
    }

    .wrapper-boton-nueva {
        display: flex;
        justify-content: flex-end;
        padding-right: 0 0.5rem 1rem 2rem;
    }

    @@media (max-width: 600px) {
        .subcategoria-item {
            padding-left: 2rem;
        }
    }
</style>


<MudContainer MaxWidth="MaxWidth.Medium" Class="mt-6">
    <MudText Typo="Typo.h5" Class="mb-4">Lista de Categorías</MudText>

    <MudExpansionPanels Elevation="0" Rounded="false" Class="pa-0">
        @foreach (var grupo in Categorias)
        {
            <MudExpansionPanel Class="categoria-panel"
                               Elevation="0"
                               Rounded="true"
                               Text="@grupo.Nombre">
                @foreach (var categoria in grupo.Items)
                {
                    <MudPaper Class="pa-0 mb-2">

                        <div class="categoria-header" @onclick="@(() => ToggleCategoria(categoria, grupo))">
                            @categoria.Nombre
                            <MudSwitch T="bool" @bind-Checked="categoria.Activo" />
                        </div>

                        @if (categoria.Expandida)
                        {
                            <MudDivider Class="mx-4 mb-2" />

                            @foreach (var sub in categoria.Subcategorias)
                            {
                                <div class="subcategoria-item">
                                    <span>@sub.Nombre</span>
                                    <MudSwitch T="bool" @bind-Checked="sub.Activo" Color="Color.Secondary" />
                                </div>
                            }

                            <div class="wrapper-boton-nueva">
                                <MudButton Class="btn-nueva" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Add"
                                        OnClick="@(() => AbrirModal(categoria))">
                                    NUEVA
                                </MudButton>
                            </div>
                        }
                    </MudPaper>
                }


            </MudExpansionPanel>
        }
    </MudExpansionPanels>

</MudContainer>

<MudDialog @bind-IsVisible="_modalAbierto">
    <MudForm @ref="_formRef">
        <div class="pa-4">
            <MudText Typo="Typo.h6">Nueva Subcategoría</MudText>

            <MudTextField Label="Nombre" @bind-Value="_form.Nombre" Required="true" RequiredError="El nombre es obligatorio" />

            <MudSelect T="string" Label="Recurrencia" @bind-Value="_form.Recurrencia">
                <MudSelectItem T="string" Value="@("ninguna")">Ninguna</MudSelectItem>
                <MudSelectItem T="string" Value="@("diario")">Diario</MudSelectItem>
                <MudSelectItem T="string" Value="@("semanal")">Semanal</MudSelectItem>
                <MudSelectItem T="string" Value="@("quincenal")">Quincenal</MudSelectItem>
                <MudSelectItem T="string" Value="@("mensual")">Mensual</MudSelectItem>
                <MudSelectItem T="string" Value="@("anual")">Anual</MudSelectItem>
            </MudSelect>

            @if (!string.IsNullOrEmpty(_form.Recurrencia) && _form.Recurrencia != "ninguna")
            {
            <MudTextField Label="Monto"
                        @bind-Value="_form.MontoDecimal"
                        Required="true"
                        RequiredError="El monto es obligatorio si hay recurrencia"
                        Immediate="true"
                        Adornment="Adornment.Start"
                        AdornmentIcon="@Icons.Material.Filled.AttachMoney" />
            }

            <MudTextField Label="Descripción" @bind-Value="_form.Descripcion" />
        </div>

        <div class="d-flex justify-end pa-4 gap-2">
            <MudButton OnClick="CancelarModal" Color="Color.Secondary" Variant="Variant.Text">Cancelar</MudButton>
            <MudButton OnClick="GuardarSubcategoria" Color="Color.Primary" Variant="Variant.Filled">Guardar</MudButton>
        </div>
    </MudForm>
</MudDialog>

@code {

    class Subcategoria
    {
        public string Nombre { get; set; }
        public string Recurrencia { get; set; }
        public decimal? MontoDecimal { get; set; }
        public string Descripcion { get; set; }
        public bool Activo { get; set; } = true;
        public bool Editando { get; set; } = false;
    }

    class Categoria
    {
        public string Nombre { get; set; }
        public bool Activo { get; set; } = true;
        public bool Expandida { get; set; } = false; // ✅ NECESARIO para resolver CS1061
        public List<Subcategoria> Subcategorias { get; set; } = new();
    }

    class GrupoCategoria
    {
        public string Nombre { get; set; }
        public List<Categoria> Items { get; set; } = new();
    }

    List<GrupoCategoria> Categorias = new()
    {
        new GrupoCategoria
        {
            Nombre = "Ingresos",
            Items = new()
            {
                new Categoria { Nombre = "Pago por trabajo", Subcategorias = new() {
                    new Subcategoria { Nombre = "Salario", Recurrencia = "mensual", MontoDecimal = 1500 },
                    new Subcategoria { Nombre = "Bono" }
                }},
                new Categoria { Nombre = "Ganancia de capital", Subcategorias = new() {
                    new Subcategoria { Nombre = "Acciones" }
                }}
            }
        },
        new GrupoCategoria
        {
            Nombre = "Gastos",
            Items = new()
            {
                new Categoria { Nombre = "Alimentación", Subcategorias = new() {
                    new Subcategoria { Nombre = "Supermercado" }
                }},
                new Categoria { Nombre = "Casa", Subcategorias = new() {
                    new Subcategoria { Nombre = "Alquiler" }
                }}
            }
        },
        new GrupoCategoria
        {
            Nombre = "Ahorro",
            Items = new()
            {
                new Categoria { Nombre = "Emergencia", Subcategorias = new() {
                    new Subcategoria { Nombre = "Corto plazo" }
                }},
                new Categoria { Nombre = "Retiro", Subcategorias = new() {
                    new Subcategoria { Nombre = "401(k)" }
                }}
            }
        }
    };

    bool _modalAbierto = false;
    Categoria _categoriaSeleccionada;
    Subcategoria _form = new();
    MudForm _formRef;

    void AbrirModal(Categoria categoria)
    {
        _categoriaSeleccionada = categoria;
        _form = new Subcategoria();
        _modalAbierto = true;
    }

    void CancelarModal()
    {
        _modalAbierto = false;
    }

    void ToggleCategoria(Categoria categoria, GrupoCategoria grupo)
    {
        foreach (var c in grupo.Items)
            c.Expandida = false;

        categoria.Expandida = true;
    }


    async void GuardarSubcategoria()
    {
        await _formRef.Validate();

        if (!_formRef.IsValid || (!string.IsNullOrEmpty(_form.Recurrencia) && !_form.MontoDecimal.HasValue))
            return;

        _categoriaSeleccionada.Subcategorias.Add(new Subcategoria
        {
            Nombre = _form.Nombre,
            Recurrencia = _form.Recurrencia,
            MontoDecimal = _form.MontoDecimal,
            Descripcion = _form.Descripcion,
            Activo = true
        });

        _modalAbierto = false;
    }
}


